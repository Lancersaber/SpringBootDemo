package com.lancer.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class SysLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    public SysLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIDIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIDIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIDEqualTo(Integer value) {
            addCriterion("ID =", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThan(Integer value) {
            addCriterion("ID >", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThan(Integer value) {
            addCriterion("ID <", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDIn(List<Integer> values) {
            addCriterion("ID in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEIsNull() {
            addCriterion("USERNAME is null");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEIsNotNull() {
            addCriterion("USERNAME is not null");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEEqualTo(String value) {
            addCriterion("USERNAME =", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMENotEqualTo(String value) {
            addCriterion("USERNAME <>", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEGreaterThan(String value) {
            addCriterion("USERNAME >", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEGreaterThanOrEqualTo(String value) {
            addCriterion("USERNAME >=", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMELessThan(String value) {
            addCriterion("USERNAME <", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMELessThanOrEqualTo(String value) {
            addCriterion("USERNAME <=", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMELike(String value) {
            addCriterion("USERNAME like", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMENotLike(String value) {
            addCriterion("USERNAME not like", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEIn(List<String> values) {
            addCriterion("USERNAME in", values, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMENotIn(List<String> values) {
            addCriterion("USERNAME not in", values, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEBetween(String value1, String value2) {
            addCriterion("USERNAME between", value1, value2, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMENotBetween(String value1, String value2) {
            addCriterion("USERNAME not between", value1, value2, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andOPERATIONIsNull() {
            addCriterion("OPERATION is null");
            return (Criteria) this;
        }

        public Criteria andOPERATIONIsNotNull() {
            addCriterion("OPERATION is not null");
            return (Criteria) this;
        }

        public Criteria andOPERATIONEqualTo(String value) {
            addCriterion("OPERATION =", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONNotEqualTo(String value) {
            addCriterion("OPERATION <>", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONGreaterThan(String value) {
            addCriterion("OPERATION >", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONGreaterThanOrEqualTo(String value) {
            addCriterion("OPERATION >=", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONLessThan(String value) {
            addCriterion("OPERATION <", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONLessThanOrEqualTo(String value) {
            addCriterion("OPERATION <=", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONLike(String value) {
            addCriterion("OPERATION like", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONNotLike(String value) {
            addCriterion("OPERATION not like", value, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONIn(List<String> values) {
            addCriterion("OPERATION in", values, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONNotIn(List<String> values) {
            addCriterion("OPERATION not in", values, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONBetween(String value1, String value2) {
            addCriterion("OPERATION between", value1, value2, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andOPERATIONNotBetween(String value1, String value2) {
            addCriterion("OPERATION not between", value1, value2, "OPERATION");
            return (Criteria) this;
        }

        public Criteria andTIMEIsNull() {
            addCriterion("TIME is null");
            return (Criteria) this;
        }

        public Criteria andTIMEIsNotNull() {
            addCriterion("TIME is not null");
            return (Criteria) this;
        }

        public Criteria andTIMEEqualTo(Integer value) {
            addCriterion("TIME =", value, "TIME");
            return (Criteria) this;
        }

        public Criteria andTIMENotEqualTo(Integer value) {
            addCriterion("TIME <>", value, "TIME");
            return (Criteria) this;
        }

        public Criteria andTIMEGreaterThan(Integer value) {
            addCriterion("TIME >", value, "TIME");
            return (Criteria) this;
        }

        public Criteria andTIMEGreaterThanOrEqualTo(Integer value) {
            addCriterion("TIME >=", value, "TIME");
            return (Criteria) this;
        }

        public Criteria andTIMELessThan(Integer value) {
            addCriterion("TIME <", value, "TIME");
            return (Criteria) this;
        }

        public Criteria andTIMELessThanOrEqualTo(Integer value) {
            addCriterion("TIME <=", value, "TIME");
            return (Criteria) this;
        }

        public Criteria andTIMEIn(List<Integer> values) {
            addCriterion("TIME in", values, "TIME");
            return (Criteria) this;
        }

        public Criteria andTIMENotIn(List<Integer> values) {
            addCriterion("TIME not in", values, "TIME");
            return (Criteria) this;
        }

        public Criteria andTIMEBetween(Integer value1, Integer value2) {
            addCriterion("TIME between", value1, value2, "TIME");
            return (Criteria) this;
        }

        public Criteria andTIMENotBetween(Integer value1, Integer value2) {
            addCriterion("TIME not between", value1, value2, "TIME");
            return (Criteria) this;
        }

        public Criteria andMETHODIsNull() {
            addCriterion("METHOD is null");
            return (Criteria) this;
        }

        public Criteria andMETHODIsNotNull() {
            addCriterion("METHOD is not null");
            return (Criteria) this;
        }

        public Criteria andMETHODEqualTo(String value) {
            addCriterion("METHOD =", value, "METHOD");
            return (Criteria) this;
        }

        public Criteria andMETHODNotEqualTo(String value) {
            addCriterion("METHOD <>", value, "METHOD");
            return (Criteria) this;
        }

        public Criteria andMETHODGreaterThan(String value) {
            addCriterion("METHOD >", value, "METHOD");
            return (Criteria) this;
        }

        public Criteria andMETHODGreaterThanOrEqualTo(String value) {
            addCriterion("METHOD >=", value, "METHOD");
            return (Criteria) this;
        }

        public Criteria andMETHODLessThan(String value) {
            addCriterion("METHOD <", value, "METHOD");
            return (Criteria) this;
        }

        public Criteria andMETHODLessThanOrEqualTo(String value) {
            addCriterion("METHOD <=", value, "METHOD");
            return (Criteria) this;
        }

        public Criteria andMETHODLike(String value) {
            addCriterion("METHOD like", value, "METHOD");
            return (Criteria) this;
        }

        public Criteria andMETHODNotLike(String value) {
            addCriterion("METHOD not like", value, "METHOD");
            return (Criteria) this;
        }

        public Criteria andMETHODIn(List<String> values) {
            addCriterion("METHOD in", values, "METHOD");
            return (Criteria) this;
        }

        public Criteria andMETHODNotIn(List<String> values) {
            addCriterion("METHOD not in", values, "METHOD");
            return (Criteria) this;
        }

        public Criteria andMETHODBetween(String value1, String value2) {
            addCriterion("METHOD between", value1, value2, "METHOD");
            return (Criteria) this;
        }

        public Criteria andMETHODNotBetween(String value1, String value2) {
            addCriterion("METHOD not between", value1, value2, "METHOD");
            return (Criteria) this;
        }

        public Criteria andPARAMSIsNull() {
            addCriterion("PARAMS is null");
            return (Criteria) this;
        }

        public Criteria andPARAMSIsNotNull() {
            addCriterion("PARAMS is not null");
            return (Criteria) this;
        }

        public Criteria andPARAMSEqualTo(String value) {
            addCriterion("PARAMS =", value, "PARAMS");
            return (Criteria) this;
        }

        public Criteria andPARAMSNotEqualTo(String value) {
            addCriterion("PARAMS <>", value, "PARAMS");
            return (Criteria) this;
        }

        public Criteria andPARAMSGreaterThan(String value) {
            addCriterion("PARAMS >", value, "PARAMS");
            return (Criteria) this;
        }

        public Criteria andPARAMSGreaterThanOrEqualTo(String value) {
            addCriterion("PARAMS >=", value, "PARAMS");
            return (Criteria) this;
        }

        public Criteria andPARAMSLessThan(String value) {
            addCriterion("PARAMS <", value, "PARAMS");
            return (Criteria) this;
        }

        public Criteria andPARAMSLessThanOrEqualTo(String value) {
            addCriterion("PARAMS <=", value, "PARAMS");
            return (Criteria) this;
        }

        public Criteria andPARAMSLike(String value) {
            addCriterion("PARAMS like", value, "PARAMS");
            return (Criteria) this;
        }

        public Criteria andPARAMSNotLike(String value) {
            addCriterion("PARAMS not like", value, "PARAMS");
            return (Criteria) this;
        }

        public Criteria andPARAMSIn(List<String> values) {
            addCriterion("PARAMS in", values, "PARAMS");
            return (Criteria) this;
        }

        public Criteria andPARAMSNotIn(List<String> values) {
            addCriterion("PARAMS not in", values, "PARAMS");
            return (Criteria) this;
        }

        public Criteria andPARAMSBetween(String value1, String value2) {
            addCriterion("PARAMS between", value1, value2, "PARAMS");
            return (Criteria) this;
        }

        public Criteria andPARAMSNotBetween(String value1, String value2) {
            addCriterion("PARAMS not between", value1, value2, "PARAMS");
            return (Criteria) this;
        }

        public Criteria andIPIsNull() {
            addCriterion("IP is null");
            return (Criteria) this;
        }

        public Criteria andIPIsNotNull() {
            addCriterion("IP is not null");
            return (Criteria) this;
        }

        public Criteria andIPEqualTo(String value) {
            addCriterion("IP =", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPNotEqualTo(String value) {
            addCriterion("IP <>", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPGreaterThan(String value) {
            addCriterion("IP >", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPGreaterThanOrEqualTo(String value) {
            addCriterion("IP >=", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPLessThan(String value) {
            addCriterion("IP <", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPLessThanOrEqualTo(String value) {
            addCriterion("IP <=", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPLike(String value) {
            addCriterion("IP like", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPNotLike(String value) {
            addCriterion("IP not like", value, "IP");
            return (Criteria) this;
        }

        public Criteria andIPIn(List<String> values) {
            addCriterion("IP in", values, "IP");
            return (Criteria) this;
        }

        public Criteria andIPNotIn(List<String> values) {
            addCriterion("IP not in", values, "IP");
            return (Criteria) this;
        }

        public Criteria andIPBetween(String value1, String value2) {
            addCriterion("IP between", value1, value2, "IP");
            return (Criteria) this;
        }

        public Criteria andIPNotBetween(String value1, String value2) {
            addCriterion("IP not between", value1, value2, "IP");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMEIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMEIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMEEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME =", value, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMENotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME <>", value, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMEGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATE_TIME >", value, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMEGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME >=", value, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMELessThan(Date value) {
            addCriterionForJDBCDate("CREATE_TIME <", value, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMELessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_TIME <=", value, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMEIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_TIME in", values, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMENotIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_TIME not in", values, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMEBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_TIME between", value1, value2, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMENotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_TIME not between", value1, value2, "CREATE_TIME");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SYSLOG
     *
     * @mbggenerated do_not_delete_during_merge Sat Oct 26 20:21:26 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SYSLOG
     *
     * @mbggenerated Sat Oct 26 20:21:26 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}